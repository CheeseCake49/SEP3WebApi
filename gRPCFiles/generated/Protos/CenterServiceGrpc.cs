// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/CenterService.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace sep3client.proto {
  public static partial class CenterService
  {
    static readonly string __ServiceName = "sep3datalayer.grpc.protobuf.CenterService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CreatingCenter> __Marshaller_sep3datalayer_grpc_protobuf_CreatingCenter = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CreatingCenter.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CenterGrpc> __Marshaller_sep3datalayer_grpc_protobuf_CenterGrpc = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CenterGrpc.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CenterId> __Marshaller_sep3datalayer_grpc_protobuf_CenterId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CenterId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CenterList> __Marshaller_sep3datalayer_grpc_protobuf_CenterList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CenterList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.UpdatingCenter> __Marshaller_sep3datalayer_grpc_protobuf_UpdatingCenter = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.UpdatingCenter.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CenterAdmin> __Marshaller_sep3datalayer_grpc_protobuf_CenterAdmin = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CenterAdmin.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.UserUsername> __Marshaller_sep3datalayer_grpc_protobuf_UserUsername = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.UserUsername.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CreatingCenter, global::sep3client.proto.CenterGrpc> __Method_CreateCenter = new grpc::Method<global::sep3client.proto.CreatingCenter, global::sep3client.proto.CenterGrpc>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCenter",
        __Marshaller_sep3datalayer_grpc_protobuf_CreatingCenter,
        __Marshaller_sep3datalayer_grpc_protobuf_CenterGrpc);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CenterId, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCenter = new grpc::Method<global::sep3client.proto.CenterId, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCenter",
        __Marshaller_sep3datalayer_grpc_protobuf_CenterId,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::sep3client.proto.CenterList> __Method_GetCenters = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::sep3client.proto.CenterList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCenters",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_sep3datalayer_grpc_protobuf_CenterList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.UpdatingCenter, global::sep3client.proto.CenterGrpc> __Method_UpdateCenter = new grpc::Method<global::sep3client.proto.UpdatingCenter, global::sep3client.proto.CenterGrpc>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCenter",
        __Marshaller_sep3datalayer_grpc_protobuf_UpdatingCenter,
        __Marshaller_sep3datalayer_grpc_protobuf_CenterGrpc);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CenterId, global::sep3client.proto.CenterGrpc> __Method_GetById = new grpc::Method<global::sep3client.proto.CenterId, global::sep3client.proto.CenterGrpc>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetById",
        __Marshaller_sep3datalayer_grpc_protobuf_CenterId,
        __Marshaller_sep3datalayer_grpc_protobuf_CenterGrpc);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CenterAdmin, global::sep3client.proto.UserUsername> __Method_AddCenterAdmin = new grpc::Method<global::sep3client.proto.CenterAdmin, global::sep3client.proto.UserUsername>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCenterAdmin",
        __Marshaller_sep3datalayer_grpc_protobuf_CenterAdmin,
        __Marshaller_sep3datalayer_grpc_protobuf_UserUsername);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::sep3client.proto.CenterServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CenterService</summary>
    [grpc::BindServiceMethod(typeof(CenterService), "BindService")]
    public abstract partial class CenterServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.CenterGrpc> CreateCenter(global::sep3client.proto.CreatingCenter request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCenter(global::sep3client.proto.CenterId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.CenterList> GetCenters(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.CenterGrpc> UpdateCenter(global::sep3client.proto.UpdatingCenter request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.CenterGrpc> GetById(global::sep3client.proto.CenterId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.UserUsername> AddCenterAdmin(global::sep3client.proto.CenterAdmin request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CenterService</summary>
    public partial class CenterServiceClient : grpc::ClientBase<CenterServiceClient>
    {
      /// <summary>Creates a new client for CenterService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CenterServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CenterService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CenterServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CenterServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CenterServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CenterGrpc CreateCenter(global::sep3client.proto.CreatingCenter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCenter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CenterGrpc CreateCenter(global::sep3client.proto.CreatingCenter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCenter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CenterGrpc> CreateCenterAsync(global::sep3client.proto.CreatingCenter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCenterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CenterGrpc> CreateCenterAsync(global::sep3client.proto.CreatingCenter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCenter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCenter(global::sep3client.proto.CenterId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCenter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCenter(global::sep3client.proto.CenterId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCenter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCenterAsync(global::sep3client.proto.CenterId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCenterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCenterAsync(global::sep3client.proto.CenterId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCenter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CenterList GetCenters(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCenters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CenterList GetCenters(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCenters, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CenterList> GetCentersAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCentersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CenterList> GetCentersAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCenters, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CenterGrpc UpdateCenter(global::sep3client.proto.UpdatingCenter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCenter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CenterGrpc UpdateCenter(global::sep3client.proto.UpdatingCenter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCenter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CenterGrpc> UpdateCenterAsync(global::sep3client.proto.UpdatingCenter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCenterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CenterGrpc> UpdateCenterAsync(global::sep3client.proto.UpdatingCenter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCenter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CenterGrpc GetById(global::sep3client.proto.CenterId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CenterGrpc GetById(global::sep3client.proto.CenterId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CenterGrpc> GetByIdAsync(global::sep3client.proto.CenterId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CenterGrpc> GetByIdAsync(global::sep3client.proto.CenterId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.UserUsername AddCenterAdmin(global::sep3client.proto.CenterAdmin request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCenterAdmin(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.UserUsername AddCenterAdmin(global::sep3client.proto.CenterAdmin request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddCenterAdmin, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.UserUsername> AddCenterAdminAsync(global::sep3client.proto.CenterAdmin request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCenterAdminAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.UserUsername> AddCenterAdminAsync(global::sep3client.proto.CenterAdmin request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddCenterAdmin, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CenterServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CenterServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CenterServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateCenter, serviceImpl.CreateCenter)
          .AddMethod(__Method_DeleteCenter, serviceImpl.DeleteCenter)
          .AddMethod(__Method_GetCenters, serviceImpl.GetCenters)
          .AddMethod(__Method_UpdateCenter, serviceImpl.UpdateCenter)
          .AddMethod(__Method_GetById, serviceImpl.GetById)
          .AddMethod(__Method_AddCenterAdmin, serviceImpl.AddCenterAdmin).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CenterServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateCenter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CreatingCenter, global::sep3client.proto.CenterGrpc>(serviceImpl.CreateCenter));
      serviceBinder.AddMethod(__Method_DeleteCenter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CenterId, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteCenter));
      serviceBinder.AddMethod(__Method_GetCenters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::sep3client.proto.CenterList>(serviceImpl.GetCenters));
      serviceBinder.AddMethod(__Method_UpdateCenter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.UpdatingCenter, global::sep3client.proto.CenterGrpc>(serviceImpl.UpdateCenter));
      serviceBinder.AddMethod(__Method_GetById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CenterId, global::sep3client.proto.CenterGrpc>(serviceImpl.GetById));
      serviceBinder.AddMethod(__Method_AddCenterAdmin, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CenterAdmin, global::sep3client.proto.UserUsername>(serviceImpl.AddCenterAdmin));
    }

  }
  public static partial class CourtService
  {
    static readonly string __ServiceName = "sep3datalayer.grpc.protobuf.CourtService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CreatingCourt> __Marshaller_sep3datalayer_grpc_protobuf_CreatingCourt = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CreatingCourt.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CourtGrpc> __Marshaller_sep3datalayer_grpc_protobuf_CourtGrpc = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CourtGrpc.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CenterId> __Marshaller_sep3datalayer_grpc_protobuf_CenterId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CenterId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CourtList> __Marshaller_sep3datalayer_grpc_protobuf_CourtList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CourtList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CourtDeletion> __Marshaller_sep3datalayer_grpc_protobuf_CourtDeletion = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CourtDeletion.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.UpdatingCourt> __Marshaller_sep3datalayer_grpc_protobuf_UpdatingCourt = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.UpdatingCourt.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CourtId> __Marshaller_sep3datalayer_grpc_protobuf_CourtId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CourtId.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CreatingCourt, global::sep3client.proto.CourtGrpc> __Method_CreateCourt = new grpc::Method<global::sep3client.proto.CreatingCourt, global::sep3client.proto.CourtGrpc>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCourt",
        __Marshaller_sep3datalayer_grpc_protobuf_CreatingCourt,
        __Marshaller_sep3datalayer_grpc_protobuf_CourtGrpc);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CenterId, global::sep3client.proto.CourtList> __Method_GetCourtsFromCenterId = new grpc::Method<global::sep3client.proto.CenterId, global::sep3client.proto.CourtList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCourtsFromCenterId",
        __Marshaller_sep3datalayer_grpc_protobuf_CenterId,
        __Marshaller_sep3datalayer_grpc_protobuf_CourtList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CourtDeletion, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCourtFromCenterId = new grpc::Method<global::sep3client.proto.CourtDeletion, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCourtFromCenterId",
        __Marshaller_sep3datalayer_grpc_protobuf_CourtDeletion,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.UpdatingCourt, global::sep3client.proto.CourtGrpc> __Method_UpdateCourt = new grpc::Method<global::sep3client.proto.UpdatingCourt, global::sep3client.proto.CourtGrpc>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCourt",
        __Marshaller_sep3datalayer_grpc_protobuf_UpdatingCourt,
        __Marshaller_sep3datalayer_grpc_protobuf_CourtGrpc);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CourtDeletion, global::sep3client.proto.CourtGrpc> __Method_GetByCenterIdAndCourtNumber = new grpc::Method<global::sep3client.proto.CourtDeletion, global::sep3client.proto.CourtGrpc>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByCenterIdAndCourtNumber",
        __Marshaller_sep3datalayer_grpc_protobuf_CourtDeletion,
        __Marshaller_sep3datalayer_grpc_protobuf_CourtGrpc);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CourtId, global::sep3client.proto.CourtGrpc> __Method_GetById = new grpc::Method<global::sep3client.proto.CourtId, global::sep3client.proto.CourtGrpc>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetById",
        __Marshaller_sep3datalayer_grpc_protobuf_CourtId,
        __Marshaller_sep3datalayer_grpc_protobuf_CourtGrpc);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::sep3client.proto.CenterServiceReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of CourtService</summary>
    [grpc::BindServiceMethod(typeof(CourtService), "BindService")]
    public abstract partial class CourtServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.CourtGrpc> CreateCourt(global::sep3client.proto.CreatingCourt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.CourtList> GetCourtsFromCenterId(global::sep3client.proto.CenterId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCourtFromCenterId(global::sep3client.proto.CourtDeletion request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.CourtGrpc> UpdateCourt(global::sep3client.proto.UpdatingCourt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.CourtGrpc> GetByCenterIdAndCourtNumber(global::sep3client.proto.CourtDeletion request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.CourtGrpc> GetById(global::sep3client.proto.CourtId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CourtService</summary>
    public partial class CourtServiceClient : grpc::ClientBase<CourtServiceClient>
    {
      /// <summary>Creates a new client for CourtService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CourtServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CourtService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CourtServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CourtServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CourtServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CourtGrpc CreateCourt(global::sep3client.proto.CreatingCourt request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCourt(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CourtGrpc CreateCourt(global::sep3client.proto.CreatingCourt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCourt, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CourtGrpc> CreateCourtAsync(global::sep3client.proto.CreatingCourt request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCourtAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CourtGrpc> CreateCourtAsync(global::sep3client.proto.CreatingCourt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCourt, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CourtList GetCourtsFromCenterId(global::sep3client.proto.CenterId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCourtsFromCenterId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CourtList GetCourtsFromCenterId(global::sep3client.proto.CenterId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCourtsFromCenterId, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CourtList> GetCourtsFromCenterIdAsync(global::sep3client.proto.CenterId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCourtsFromCenterIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CourtList> GetCourtsFromCenterIdAsync(global::sep3client.proto.CenterId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCourtsFromCenterId, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCourtFromCenterId(global::sep3client.proto.CourtDeletion request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCourtFromCenterId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCourtFromCenterId(global::sep3client.proto.CourtDeletion request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCourtFromCenterId, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCourtFromCenterIdAsync(global::sep3client.proto.CourtDeletion request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCourtFromCenterIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCourtFromCenterIdAsync(global::sep3client.proto.CourtDeletion request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCourtFromCenterId, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CourtGrpc UpdateCourt(global::sep3client.proto.UpdatingCourt request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCourt(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CourtGrpc UpdateCourt(global::sep3client.proto.UpdatingCourt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCourt, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CourtGrpc> UpdateCourtAsync(global::sep3client.proto.UpdatingCourt request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCourtAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CourtGrpc> UpdateCourtAsync(global::sep3client.proto.UpdatingCourt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCourt, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CourtGrpc GetByCenterIdAndCourtNumber(global::sep3client.proto.CourtDeletion request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByCenterIdAndCourtNumber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CourtGrpc GetByCenterIdAndCourtNumber(global::sep3client.proto.CourtDeletion request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByCenterIdAndCourtNumber, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CourtGrpc> GetByCenterIdAndCourtNumberAsync(global::sep3client.proto.CourtDeletion request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByCenterIdAndCourtNumberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CourtGrpc> GetByCenterIdAndCourtNumberAsync(global::sep3client.proto.CourtDeletion request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByCenterIdAndCourtNumber, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CourtGrpc GetById(global::sep3client.proto.CourtId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CourtGrpc GetById(global::sep3client.proto.CourtId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CourtGrpc> GetByIdAsync(global::sep3client.proto.CourtId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CourtGrpc> GetByIdAsync(global::sep3client.proto.CourtId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CourtServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CourtServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CourtServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateCourt, serviceImpl.CreateCourt)
          .AddMethod(__Method_GetCourtsFromCenterId, serviceImpl.GetCourtsFromCenterId)
          .AddMethod(__Method_DeleteCourtFromCenterId, serviceImpl.DeleteCourtFromCenterId)
          .AddMethod(__Method_UpdateCourt, serviceImpl.UpdateCourt)
          .AddMethod(__Method_GetByCenterIdAndCourtNumber, serviceImpl.GetByCenterIdAndCourtNumber)
          .AddMethod(__Method_GetById, serviceImpl.GetById).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CourtServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateCourt, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CreatingCourt, global::sep3client.proto.CourtGrpc>(serviceImpl.CreateCourt));
      serviceBinder.AddMethod(__Method_GetCourtsFromCenterId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CenterId, global::sep3client.proto.CourtList>(serviceImpl.GetCourtsFromCenterId));
      serviceBinder.AddMethod(__Method_DeleteCourtFromCenterId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CourtDeletion, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteCourtFromCenterId));
      serviceBinder.AddMethod(__Method_UpdateCourt, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.UpdatingCourt, global::sep3client.proto.CourtGrpc>(serviceImpl.UpdateCourt));
      serviceBinder.AddMethod(__Method_GetByCenterIdAndCourtNumber, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CourtDeletion, global::sep3client.proto.CourtGrpc>(serviceImpl.GetByCenterIdAndCourtNumber));
      serviceBinder.AddMethod(__Method_GetById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CourtId, global::sep3client.proto.CourtGrpc>(serviceImpl.GetById));
    }

  }
  public static partial class UserService
  {
    static readonly string __ServiceName = "sep3datalayer.grpc.protobuf.UserService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CreatingUser> __Marshaller_sep3datalayer_grpc_protobuf_CreatingUser = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CreatingUser.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.UserGrpc> __Marshaller_sep3datalayer_grpc_protobuf_UserGrpc = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.UserGrpc.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.UserList> __Marshaller_sep3datalayer_grpc_protobuf_UserList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.UserList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CenterId> __Marshaller_sep3datalayer_grpc_protobuf_CenterId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CenterId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.UserUsername> __Marshaller_sep3datalayer_grpc_protobuf_UserUsername = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.UserUsername.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CenterAdminList> __Marshaller_sep3datalayer_grpc_protobuf_CenterAdminList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CenterAdminList.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CreatingUser, global::sep3client.proto.UserGrpc> __Method_CreateUser = new grpc::Method<global::sep3client.proto.CreatingUser, global::sep3client.proto.UserGrpc>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateUser",
        __Marshaller_sep3datalayer_grpc_protobuf_CreatingUser,
        __Marshaller_sep3datalayer_grpc_protobuf_UserGrpc);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::sep3client.proto.UserList> __Method_GetAllUsers = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::sep3client.proto.UserList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllUsers",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_sep3datalayer_grpc_protobuf_UserList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CenterId, global::sep3client.proto.UserList> __Method_GetCenterAdmins = new grpc::Method<global::sep3client.proto.CenterId, global::sep3client.proto.UserList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCenterAdmins",
        __Marshaller_sep3datalayer_grpc_protobuf_CenterId,
        __Marshaller_sep3datalayer_grpc_protobuf_UserList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.UserUsername, global::sep3client.proto.CenterAdminList> __Method_GetAdminnedCenters = new grpc::Method<global::sep3client.proto.UserUsername, global::sep3client.proto.CenterAdminList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAdminnedCenters",
        __Marshaller_sep3datalayer_grpc_protobuf_UserUsername,
        __Marshaller_sep3datalayer_grpc_protobuf_CenterAdminList);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::sep3client.proto.CenterServiceReflection.Descriptor.Services[2]; }
    }

    /// <summary>Base class for server-side implementations of UserService</summary>
    [grpc::BindServiceMethod(typeof(UserService), "BindService")]
    public abstract partial class UserServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.UserGrpc> CreateUser(global::sep3client.proto.CreatingUser request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.UserList> GetAllUsers(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.UserList> GetCenterAdmins(global::sep3client.proto.CenterId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.CenterAdminList> GetAdminnedCenters(global::sep3client.proto.UserUsername request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for UserService</summary>
    public partial class UserServiceClient : grpc::ClientBase<UserServiceClient>
    {
      /// <summary>Creates a new client for UserService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public UserServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UserService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public UserServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected UserServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected UserServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.UserGrpc CreateUser(global::sep3client.proto.CreatingUser request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.UserGrpc CreateUser(global::sep3client.proto.CreatingUser request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.UserGrpc> CreateUserAsync(global::sep3client.proto.CreatingUser request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.UserGrpc> CreateUserAsync(global::sep3client.proto.CreatingUser request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.UserList GetAllUsers(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.UserList GetAllUsers(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.UserList> GetAllUsersAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.UserList> GetAllUsersAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.UserList GetCenterAdmins(global::sep3client.proto.CenterId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCenterAdmins(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.UserList GetCenterAdmins(global::sep3client.proto.CenterId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCenterAdmins, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.UserList> GetCenterAdminsAsync(global::sep3client.proto.CenterId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCenterAdminsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.UserList> GetCenterAdminsAsync(global::sep3client.proto.CenterId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCenterAdmins, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CenterAdminList GetAdminnedCenters(global::sep3client.proto.UserUsername request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAdminnedCenters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.CenterAdminList GetAdminnedCenters(global::sep3client.proto.UserUsername request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAdminnedCenters, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CenterAdminList> GetAdminnedCentersAsync(global::sep3client.proto.UserUsername request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAdminnedCentersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.CenterAdminList> GetAdminnedCentersAsync(global::sep3client.proto.UserUsername request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAdminnedCenters, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override UserServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UserServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(UserServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateUser, serviceImpl.CreateUser)
          .AddMethod(__Method_GetAllUsers, serviceImpl.GetAllUsers)
          .AddMethod(__Method_GetCenterAdmins, serviceImpl.GetCenterAdmins)
          .AddMethod(__Method_GetAdminnedCenters, serviceImpl.GetAdminnedCenters).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, UserServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CreatingUser, global::sep3client.proto.UserGrpc>(serviceImpl.CreateUser));
      serviceBinder.AddMethod(__Method_GetAllUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::sep3client.proto.UserList>(serviceImpl.GetAllUsers));
      serviceBinder.AddMethod(__Method_GetCenterAdmins, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CenterId, global::sep3client.proto.UserList>(serviceImpl.GetCenterAdmins));
      serviceBinder.AddMethod(__Method_GetAdminnedCenters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.UserUsername, global::sep3client.proto.CenterAdminList>(serviceImpl.GetAdminnedCenters));
    }

  }
  public static partial class BookingService
  {
    static readonly string __ServiceName = "sep3datalayer.grpc.protobuf.BookingService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CreatingBooking> __Marshaller_sep3datalayer_grpc_protobuf_CreatingBooking = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CreatingBooking.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.BookingGrpc> __Marshaller_sep3datalayer_grpc_protobuf_BookingGrpc = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.BookingGrpc.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CreatingBooking, global::sep3client.proto.BookingGrpc> __Method_CreateBooking = new grpc::Method<global::sep3client.proto.CreatingBooking, global::sep3client.proto.BookingGrpc>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBooking",
        __Marshaller_sep3datalayer_grpc_protobuf_CreatingBooking,
        __Marshaller_sep3datalayer_grpc_protobuf_BookingGrpc);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::sep3client.proto.CenterServiceReflection.Descriptor.Services[3]; }
    }

    /// <summary>Base class for server-side implementations of BookingService</summary>
    [grpc::BindServiceMethod(typeof(BookingService), "BindService")]
    public abstract partial class BookingServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.BookingGrpc> CreateBooking(global::sep3client.proto.CreatingBooking request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BookingService</summary>
    public partial class BookingServiceClient : grpc::ClientBase<BookingServiceClient>
    {
      /// <summary>Creates a new client for BookingService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BookingServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BookingService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BookingServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BookingServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BookingServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.BookingGrpc CreateBooking(global::sep3client.proto.CreatingBooking request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBooking(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.BookingGrpc CreateBooking(global::sep3client.proto.CreatingBooking request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBooking, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.BookingGrpc> CreateBookingAsync(global::sep3client.proto.CreatingBooking request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBookingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.BookingGrpc> CreateBookingAsync(global::sep3client.proto.CreatingBooking request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBooking, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override BookingServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BookingServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(BookingServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateBooking, serviceImpl.CreateBooking).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BookingServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateBooking, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CreatingBooking, global::sep3client.proto.BookingGrpc>(serviceImpl.CreateBooking));
    }

  }
  public static partial class BookingAddOnService
  {
    static readonly string __ServiceName = "sep3datalayer.grpc.protobuf.BookingAddOnService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CreatingBookingAddOn> __Marshaller_sep3datalayer_grpc_protobuf_CreatingBookingAddOn = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CreatingBookingAddOn.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.BookingAddOnGrpc> __Marshaller_sep3datalayer_grpc_protobuf_BookingAddOnGrpc = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.BookingAddOnGrpc.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CreatingBookingAddOn, global::sep3client.proto.BookingAddOnGrpc> __Method_CreateBookingAddOn = new grpc::Method<global::sep3client.proto.CreatingBookingAddOn, global::sep3client.proto.BookingAddOnGrpc>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBookingAddOn",
        __Marshaller_sep3datalayer_grpc_protobuf_CreatingBookingAddOn,
        __Marshaller_sep3datalayer_grpc_protobuf_BookingAddOnGrpc);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::sep3client.proto.CenterServiceReflection.Descriptor.Services[4]; }
    }

    /// <summary>Base class for server-side implementations of BookingAddOnService</summary>
    [grpc::BindServiceMethod(typeof(BookingAddOnService), "BindService")]
    public abstract partial class BookingAddOnServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.BookingAddOnGrpc> CreateBookingAddOn(global::sep3client.proto.CreatingBookingAddOn request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BookingAddOnService</summary>
    public partial class BookingAddOnServiceClient : grpc::ClientBase<BookingAddOnServiceClient>
    {
      /// <summary>Creates a new client for BookingAddOnService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BookingAddOnServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BookingAddOnService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BookingAddOnServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BookingAddOnServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BookingAddOnServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.BookingAddOnGrpc CreateBookingAddOn(global::sep3client.proto.CreatingBookingAddOn request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBookingAddOn(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.BookingAddOnGrpc CreateBookingAddOn(global::sep3client.proto.CreatingBookingAddOn request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBookingAddOn, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.BookingAddOnGrpc> CreateBookingAddOnAsync(global::sep3client.proto.CreatingBookingAddOn request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBookingAddOnAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.BookingAddOnGrpc> CreateBookingAddOnAsync(global::sep3client.proto.CreatingBookingAddOn request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBookingAddOn, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override BookingAddOnServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BookingAddOnServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(BookingAddOnServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateBookingAddOn, serviceImpl.CreateBookingAddOn).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BookingAddOnServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateBookingAddOn, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CreatingBookingAddOn, global::sep3client.proto.BookingAddOnGrpc>(serviceImpl.CreateBookingAddOn));
    }

  }
  public static partial class TimeSlotService
  {
    static readonly string __ServiceName = "sep3datalayer.grpc.protobuf.TimeSlotService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CreatingTimeSlot> __Marshaller_sep3datalayer_grpc_protobuf_CreatingTimeSlot = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CreatingTimeSlot.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.TimeSlotGrpc> __Marshaller_sep3datalayer_grpc_protobuf_TimeSlotGrpc = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.TimeSlotGrpc.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.CourtId> __Marshaller_sep3datalayer_grpc_protobuf_CourtId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.CourtId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::sep3client.proto.TimeSlotList> __Marshaller_sep3datalayer_grpc_protobuf_TimeSlotList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sep3client.proto.TimeSlotList.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CreatingTimeSlot, global::sep3client.proto.TimeSlotGrpc> __Method_CreateTimeSlot = new grpc::Method<global::sep3client.proto.CreatingTimeSlot, global::sep3client.proto.TimeSlotGrpc>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTimeSlot",
        __Marshaller_sep3datalayer_grpc_protobuf_CreatingTimeSlot,
        __Marshaller_sep3datalayer_grpc_protobuf_TimeSlotGrpc);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::sep3client.proto.CourtId, global::sep3client.proto.TimeSlotList> __Method_GetTimeSlotsFromCourtId = new grpc::Method<global::sep3client.proto.CourtId, global::sep3client.proto.TimeSlotList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTimeSlotsFromCourtId",
        __Marshaller_sep3datalayer_grpc_protobuf_CourtId,
        __Marshaller_sep3datalayer_grpc_protobuf_TimeSlotList);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::sep3client.proto.CenterServiceReflection.Descriptor.Services[5]; }
    }

    /// <summary>Base class for server-side implementations of TimeSlotService</summary>
    [grpc::BindServiceMethod(typeof(TimeSlotService), "BindService")]
    public abstract partial class TimeSlotServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.TimeSlotGrpc> CreateTimeSlot(global::sep3client.proto.CreatingTimeSlot request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::sep3client.proto.TimeSlotList> GetTimeSlotsFromCourtId(global::sep3client.proto.CourtId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for TimeSlotService</summary>
    public partial class TimeSlotServiceClient : grpc::ClientBase<TimeSlotServiceClient>
    {
      /// <summary>Creates a new client for TimeSlotService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TimeSlotServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TimeSlotService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TimeSlotServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TimeSlotServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TimeSlotServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.TimeSlotGrpc CreateTimeSlot(global::sep3client.proto.CreatingTimeSlot request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTimeSlot(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.TimeSlotGrpc CreateTimeSlot(global::sep3client.proto.CreatingTimeSlot request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTimeSlot, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.TimeSlotGrpc> CreateTimeSlotAsync(global::sep3client.proto.CreatingTimeSlot request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTimeSlotAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.TimeSlotGrpc> CreateTimeSlotAsync(global::sep3client.proto.CreatingTimeSlot request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTimeSlot, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.TimeSlotList GetTimeSlotsFromCourtId(global::sep3client.proto.CourtId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTimeSlotsFromCourtId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::sep3client.proto.TimeSlotList GetTimeSlotsFromCourtId(global::sep3client.proto.CourtId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTimeSlotsFromCourtId, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.TimeSlotList> GetTimeSlotsFromCourtIdAsync(global::sep3client.proto.CourtId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTimeSlotsFromCourtIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::sep3client.proto.TimeSlotList> GetTimeSlotsFromCourtIdAsync(global::sep3client.proto.CourtId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTimeSlotsFromCourtId, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TimeSlotServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TimeSlotServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(TimeSlotServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateTimeSlot, serviceImpl.CreateTimeSlot)
          .AddMethod(__Method_GetTimeSlotsFromCourtId, serviceImpl.GetTimeSlotsFromCourtId).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TimeSlotServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateTimeSlot, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CreatingTimeSlot, global::sep3client.proto.TimeSlotGrpc>(serviceImpl.CreateTimeSlot));
      serviceBinder.AddMethod(__Method_GetTimeSlotsFromCourtId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sep3client.proto.CourtId, global::sep3client.proto.TimeSlotList>(serviceImpl.GetTimeSlotsFromCourtId));
    }

  }
}
#endregion
