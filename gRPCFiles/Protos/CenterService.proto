syntax = "proto3";
option java_multiple_files = true;
import "google/protobuf/empty.proto";
package sep3datalayer.grpc.protobuf;
option csharp_namespace = "sep3client.proto";

// Centers

message CreatingCenter {
  string name = 1;
  int32 zipCode = 2;
  string city = 3;
  string address = 4;
}

message CenterGrpc {
  int32 id = 1;
  string name = 2;
  int32 zipCode = 3;
  string city = 4;
  string address = 5;
}

message CenterId {
  int32 id = 1;
}

message UpdatingCenter {
  int32 id = 1;
  string name = 2;
  int32 zipCode = 3;
  string city = 4;
  string address = 5;
}

message CenterList {
  repeated CenterGrpc center = 1;
}

message CenterAdmin {
  int32 centerId = 1;
  string username = 2;
}

message CenterAdminList {
  repeated CenterAdmin admins = 1;
}

service CenterService {
  rpc CreateCenter(CreatingCenter) returns (CenterGrpc);
  rpc DeleteCenter(CenterId) returns (google.protobuf.Empty);
  rpc GetCenters(google.protobuf.Empty) returns (CenterList);
  rpc UpdateCenter(UpdatingCenter) returns (CenterGrpc);
  rpc GetById(CenterId) returns (CenterGrpc);
  rpc AddCenterAdmin(CenterAdmin) returns (UserUsername);
}

// Courts

message CreatingCourt {
  int32 centerId = 1;
  string courtType = 2;
  int32 courtNumber = 3;
  string courtSponsor = 4;
}

message CourtGrpc {
  int32 id = 1;
  int32 centerId = 2;
  string courtType = 3;
  int32 courtNumber = 4;
  string courtSponsor = 5;
}

message UpdatingCourt {
  int32 id = 1;
  string courtType = 2;
  int32 courtNumber = 3;
  string courtSponsor = 4;
}

message CourtList {
  repeated CourtGrpc court = 1;
}

message CourtDeletion {
  int32 centerId = 1;
  int32 courtNumber = 2;
}

message CourtId {
  int32 id = 1;
}

service CourtService {
  rpc CreateCourt(CreatingCourt) returns (CourtGrpc);
  rpc GetCourtsFromCenterId(CenterId) returns (CourtList);
  rpc DeleteCourtFromCenterId(CourtDeletion) returns (google.protobuf.Empty);
  rpc UpdateCourt(UpdatingCourt) returns (CourtGrpc);
  rpc GetByCenterIdAndCourtNumber(CourtDeletion) returns (CourtGrpc);
  rpc GetById(CourtId) returns (CourtGrpc);
}

// Users

message CreatingUser {
  string username = 1;
  string password = 2;
  string email = 3;
  string name = 4;
  string role = 5;
}

message UserGrpc {
  string username = 1;
  string password = 2;
  string email = 3;
  string name = 4;
  string role = 5;
}

message UserList {
  repeated UserGrpc user = 1;
}

message UserUsername {
  string username = 1;
}

service UserService {
  rpc CreateUser(CreatingUser) returns (UserGrpc);
  rpc GetAllUsers(google.protobuf.Empty) returns (UserList);
  rpc GetCenterAdmins(CenterId) returns (UserList);
  rpc GetAdminnedCenters(UserUsername) returns (CenterAdminList);
}

// Booking

message CreatingBooking{
  string username = 1;
  int32 totalPrice = 2;
  TimeSlotList timeSlotList = 3;
}

message BookingGrpc{
  int32 id = 1;
  string username = 2;
  int32 totalPrice = 3;
  TimeSlotList timeSlotList = 4;
}

message BookingList{
  repeated BookingGrpc bookings = 1;
}

service BookingService{
  rpc CreateBooking(CreatingBooking) returns (BookingGrpc);
}

// Booking Addon

message CreatingBookingAddOn{
  int32 bookingId = 1;
  string name = 2;
  int32 price = 3;
  int32 quantity = 4;
}

message BookingAddOnGrpc{
  int32 id = 1;
  int32 bookingId = 2;
  string name = 3;
  int32 price = 4;
  int32 quantity = 5;
}

message BookingAddOnList{
  repeated BookingAddOnGrpc bookingAddOns = 1;
}

service BookingAddOnService{
  rpc CreateBookingAddOn(CreatingBookingAddOn) returns (BookingAddOnGrpc);
}

// Timeslot

message CreatingTimeSlot{
  int32 courtId = 1;
  int32 year = 2;
  int32 month = 3;
  int32 day = 4;
  int32 startHour = 5;
  int32 startMinute = 6;
  int32 duration = 7;
  bool isBooked = 8;
  int32 price = 9;
}

message CreatingTimeSlotList{
  repeated CreatingTimeSlot timeSlots = 1;
}

message TimeSlotGrpc{
  int32 id = 1;
  int32 courtId = 2;
  int32 year = 3;
  int32 month = 4;
  int32 day = 5;
  int32 startHour = 6;
  int32 startMinute = 7;
  int32 duration = 8;
  bool isBooked = 9;
  int32 price = 10;
}

message TimeSlotList{
  repeated TimeSlotGrpc timeSlots = 1;
}

service TimeSlotService{
  rpc CreateTimeSlot(CreatingTimeSlot) returns (TimeSlotGrpc);
  rpc CreateManyTimeSlots(CreatingTimeSlotList) returns (TimeSlotList);
  rpc GetTimeSlotsFromCourtId(CourtId) returns (TimeSlotList);
}
